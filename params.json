{"name":"DictMySQL","tagline":"A MySQL class for more convenient database manipulation with Python dictionary.","body":"## Initialization\r\nParameters:\r\n\r\n- **host**: _string_   \r\n- **user**: _string_   \r\n- **passwd**: _string_  \r\n- **db**: _string_  \r\n- **port**: _int, default 3306_  \r\n- **charset**: _string, default 'utf8'_  \r\n- **init_command**: _string, default 'SET NAMES UTF8'_  \r\n- **dictcursor**: _bool, default False_  \r\nWhen it's True, the connector uses DictCursor instead of regular cursor, so that all the return of SQL query will be wrapped in dict.   \r\n- **use_unicode**: _bool, default True_  \r\n\r\nReturns: DictMySQL object\r\n\r\nExample:\r\n```python\r\nfrom dictmysql import DictMySQL\r\nmysql = DictMySQL(db='occupation', host='127.0.0.1', user='root', passwd='')\r\n```\r\n\r\n## SELECT\r\nParameters:\r\n\r\n- **table**: _string_   \r\n- **columns**: _list, default None_   \r\n- **join**: _dict, default None_   \r\nSee [JOIN Syntax]() for more details.\r\n- **where**: _dict, default None_   \r\nSee [WHERE Syntax]() for more details.\r\n- **order**: _string, default None_   \r\n- **limit**: _int|list, default None_   \r\n\r\nReturns: the result of SQL query.\r\n\r\nExamples:\r\n```python\r\nmysql.select(table='jobs', where={'value': 'Artist'})\r\n# SELECT * FROM `jobs` WHERE (`value` = \"Artist\");\r\n\r\nmysql.select(table='jobs', \r\n             columns=['jobs.id', 'profiles.id'], \r\n             join={'profile_jobs': {'jobs.id': 'profile_jobs.job_id'}, \r\n                   'profiles': {'profile_jobs.profile_id': 'profiles.id'}}, \r\n             where={'jobs.value': 'Artist'})\r\n# SELECT `jobs`.`id`, `profiles`.`id` FROM `jobs` \r\n# JOIN `profiles` ON `profile_jobs`.`profile_id`=`profiles`.`id` \r\n# JOIN `profile_jobs` ON `jobs`.`id`=`profile_jobs`.`job_id` \r\n# WHERE (`jobs`.`value` = \"Artist\");\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}